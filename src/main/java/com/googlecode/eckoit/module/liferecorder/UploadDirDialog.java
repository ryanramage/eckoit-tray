/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * UploadDirDialog.java
 *
 * Created on Dec 7, 2010, 2:46:16 PM
 */

package com.googlecode.eckoit.module.liferecorder;

import com.googlecode.eckoit.events.LiferecorderSyncProcessMessage;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.SwingUtilities;
import org.bushe.swing.event.EventBus;
import org.bushe.swing.event.EventSubscriber;
import org.ektorp.CouchDbConnector;

/**
 *
 * @author ryan
 */
public class UploadDirDialog extends javax.swing.JDialog {

    private CouchDbConnector wikiConnector;
    private File selectedFile;

    /** Creates new form UploadDirDialog */
    public UploadDirDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        uploadProgressBar.setMinimum(0);
        uploadProgressBar.setMaximum(100);

        EventBus.subscribeStrongly(LiferecorderSyncProcessMessage.class, new EventSubscriber<LiferecorderSyncProcessMessage>() {
            @Override
            public void onEvent(LiferecorderSyncProcessMessage t) {
                System.out.println(t.getStep());
                statusLabel.setText(t.getStep());
                uploadProgressBar.setMaximum(t.getTotalSteps());
                uploadProgressBar.setValue(t.getProgress());

            }
        });


    }

    public void setWikiConnector(CouchDbConnector wikiConnector) {
        this.wikiConnector = wikiConnector;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        folderTextField = new javax.swing.JTextField();
        fileChooserButton = new javax.swing.JButton();
        uploadButton = new javax.swing.JButton();
        uploadProgressBar = new javax.swing.JProgressBar();
        statusLabel = new javax.swing.JLabel();
        standardLabel = new javax.swing.JRadioButton();
        rockboxLabel = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Select a folder that contains audio to upload.");

        folderTextField.setEditable(false);

        fileChooserButton.setText("...");
        fileChooserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserButtonActionPerformed(evt);
            }
        });

        uploadButton.setText("Upload");
        uploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadButtonActionPerformed(evt);
            }
        });

        uploadProgressBar.setEnabled(false);

        statusLabel.setText(" ");

        buttonGroup1.add(standardLabel);
        standardLabel.setSelected(true);
        standardLabel.setText("YYYY-MM-DD-HH-MM-SS.ext   [where ext is mp3,ogg]");
        standardLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                standardLabelActionPerformed(evt);
            }
        });

        buttonGroup1.add(rockboxLabel);
        rockboxLabel.setText("Rockbox ");
        rockboxLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rockboxLabelActionPerformed(evt);
            }
        });

        jLabel3.setText("How are the files labelled with date/time?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(uploadButton)
                            .addComponent(rockboxLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(standardLabel)
                                    .addComponent(folderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fileChooserButton))
                            .addComponent(uploadProgressBar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 491, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(statusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(folderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fileChooserButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(standardLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rockboxLabel)
                .addGap(27, 27, 27)
                .addComponent(statusLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(uploadProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(uploadButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fileChooserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserButtonActionPerformed
        final JFileChooser fc = new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            selectedFile = fc.getSelectedFile();
            folderTextField.setText(selectedFile.getAbsolutePath());
        }
    }//GEN-LAST:event_fileChooserButtonActionPerformed

    private void uploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadButtonActionPerformed
     SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                uploadProgressBar.setEnabled(true);
                uploadProgressBar.setIndeterminate(true);
                statusLabel.setText("Uploading...");
                final Uploader uploader = new Uploader(wikiConnector);

                uploadProgressBar.setIndeterminate(false);
                uploadButton.setEnabled(false);
                fileChooserButton.setEnabled(false);


                
                new Thread(new Runnable() {
                    @Override
                    public void run() {

                        if (rockboxLabel.isSelected()) {
                            SansaClipLiferecorder scl = new SansaClipLiferecorder();
                            uploader.uploadFilesToCouch(selectedFile, scl);
                        } else {
                            SimpleAudioDirectory sad = new SimpleAudioDirectory();
                            uploader.uploadFilesToCouch(selectedFile, sad);
                        }
                        statusLabel.setText("Complete. Close Dialog.");

                    }
                }).start();



                
            }
        });

    }//GEN-LAST:event_uploadButtonActionPerformed

    private void standardLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_standardLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_standardLabelActionPerformed

    private void rockboxLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rockboxLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rockboxLabelActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UploadDirDialog dialog = new UploadDirDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton fileChooserButton;
    private javax.swing.JTextField folderTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton rockboxLabel;
    private javax.swing.JRadioButton standardLabel;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JButton uploadButton;
    private javax.swing.JProgressBar uploadProgressBar;
    // End of variables declaration//GEN-END:variables

}
