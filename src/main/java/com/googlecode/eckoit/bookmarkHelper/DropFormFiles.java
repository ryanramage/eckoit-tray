/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DropFormWebpage.java
 *
 * Created on Sep 2, 2010, 11:18:07 AM
 */

package com.googlecode.eckoit.bookmarkHelper;

import com.googlecode.eckoit.Slugger;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.SwingUtilities;
import net.sf.jmimemagic.Magic;
import org.apache.commons.lang.StringUtils;
import org.codehaus.jackson.JsonNode;
import org.codehaus.jackson.node.ObjectNode;
import org.ektorp.AttachmentInputStream;
import org.ektorp.CouchDbConnector;

import org.ektorp.Revision;
import org.ektorp.ViewQuery;
import org.ektorp.impl.StdCouchDbConnector;
import org.joda.time.DateTime;

/**
 *
 * @author ryan
 */
public class DropFormFiles extends javax.swing.JPanel {


    BookmarkDropTargetWindow window;
    JDialog container;
    private CouchDbConnector connector;
    private List<String> spaces;
    private String lastTopicID;
    private String lastSpaceID;
    private CouchDbConnector wikiConnector;
    private List<File> files;

    /** Creates new form DropFormWebpage */
    public DropFormFiles() {
        initComponents();
    }



    public void setBookmarkDropTargetWindow(BookmarkDropTargetWindow window) {
        this.window = window;
    }

    public void setConnector(  CouchDbConnector connector) {
        this.connector = connector;
    }


    public void setFiles(List<File> files) {
        numberOfFilesLabel.setText(files.size() + "");
        this.files = files;
    }


    protected void setTopicsAvailable(List<String> topics) {
        Vector<String> topicVector = new Vector<String>(topics);
        topicComboBox.setModel(new javax.swing.DefaultComboBoxModel(topicVector));
    }




    protected List<String> getTopics() {
        List<String> list = new ArrayList<String>();
        ViewQuery query = new ViewQuery().designDocId("_design/app").viewName("topics");
        List<JsonNode> results = wikiConnector.queryView(query, JsonNode.class);
        for(JsonNode result : results) {
            //System.out.println(result.toString());
            list.add(result.get("_id").getTextValue());
        }
        return list;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        siteIconLabel = new javax.swing.JLabel();
        topicComboBox = new javax.swing.JComboBox();
        addLinkRadioButton = new javax.swing.JRadioButton();
        newTopicRadioButton = new javax.swing.JRadioButton();
        newTopicTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        topicTextArea = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        numberOfFilesLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setForeground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));

        topicComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buttonGroup1.add(addLinkRadioButton);
        addLinkRadioButton.setSelected(true);
        addLinkRadioButton.setText("Add Link to Existing Topic");
        addLinkRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addLinkRadioButtonActionPerformed(evt);
            }
        });

        buttonGroup1.add(newTopicRadioButton);
        newTopicRadioButton.setText("Add Link to New Topic");
        newTopicRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newTopicRadioButtonActionPerformed(evt);
            }
        });

        newTopicTextField.setEditable(false);

        topicTextArea.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
        topicTextArea.setColumns(20);
        topicTextArea.setEditable(false);
        topicTextArea.setRows(5);
        topicTextArea.setEnabled(false);
        jScrollPane1.setViewportView(topicTextArea);

        jLabel4.setText("Topic");
        jLabel4.setEnabled(false);

        jLabel5.setText("Notes");
        jLabel5.setEnabled(false);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        numberOfFilesLabel.setText("1");

        jLabel2.setText("file(s) to add to the follow topic");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(siteIconLabel)
                .addGap(10, 10, 10))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(numberOfFilesLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addContainerGap(221, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(topicComboBox, 0, 399, Short.MAX_VALUE))
                    .addComponent(addLinkRadioButton))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newTopicRadioButton)
                .addContainerGap(270, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newTopicTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 377, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(405, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(292, Short.MAX_VALUE)
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(siteIconLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(numberOfFilesLabel)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addLinkRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(topicComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newTopicRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newTopicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addLinkRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addLinkRadioButtonActionPerformed
        topicComboBox.setEnabled(true);

        newTopicTextField.setEnabled(false);
        newTopicTextField.setEditable(false);
        topicTextArea.setEnabled(false);
        topicTextArea.setEditable(false);
        topicTextArea.setBackground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));

    }//GEN-LAST:event_addLinkRadioButtonActionPerformed

    private void newTopicRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newTopicRadioButtonActionPerformed
        topicComboBox.setEnabled(false);

        newTopicTextField.setEnabled(true);
        newTopicTextField.setEditable(true);
        topicTextArea.setEnabled(true);
        topicTextArea.setEditable(true);
        topicTextArea.setBackground(javax.swing.UIManager.getDefaults().getColor("TextArea.background"));
    }//GEN-LAST:event_newTopicRadioButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        if (addLinkRadioButton.isSelected()) {
            String topic = (String)topicComboBox.getModel().getSelectedItem();
            String revision = null;
            List<Revision> revisions = wikiConnector.getRevisions(topic);
            revision = revisions.get(0).getRev();

            for (File file:files) {
                String name = file.getName();
                try {
                    FileInputStream fis = new FileInputStream(file);
                    String mimeType = Magic.getMagicMatch(file, true).getMimeType();
                    AttachmentInputStream a = new AttachmentInputStream(name, fis, mimeType );
                    revision = wikiConnector.createAttachment(topic, revision,  a);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }

            JsonNode node = wikiConnector.get(JsonNode.class, topic);
            ObjectNode onode = (ObjectNode) node;
            DateTime now = new DateTime();
            onode.put("-lastmodified", now.toString());
            wikiConnector.update(node);
            container.setVisible(false);
            lastTopicID = topic;
        }
        if (newTopicRadioButton.isSelected()) {
            String topic = Slugger.generateSlug(newTopicTextField.getText());

            Map<String,Object> doc = new HashMap<String, Object>();
            doc.put("_id", topic);
            String wiki = topicTextArea.getText();
            if (StringUtils.isNotEmpty(wiki)) {
                doc.put("-wiki", wiki);
            }
            DateTime now = new DateTime();
            doc.put("-lastmodified", now.toString());
 
            wikiConnector.create(doc);
            
            lastTopicID = topic;

            for (File file:files) {
                String name = file.getName();
                try {
                    FileInputStream fis = new FileInputStream(file);
                    String mimeType = Magic.getMagicMatch(file, true).getMimeType();
                    AttachmentInputStream a = new AttachmentInputStream(name, fis, mimeType );
                    wikiConnector.createAttachment(topic, a);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
            container.setVisible(false);
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        container.setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    protected JButton getOkButton() {
        return okButton;
    }

    protected void setContainer(JDialog container) {
        this.container = container;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton addLinkRadioButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton newTopicRadioButton;
    private javax.swing.JTextField newTopicTextField;
    private javax.swing.JLabel numberOfFilesLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel siteIconLabel;
    private javax.swing.JComboBox topicComboBox;
    private javax.swing.JTextArea topicTextArea;
    // End of variables declaration//GEN-END:variables

}
